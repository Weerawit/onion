package com.worldbestsoft.model;

// Generated Jul 16, 2013 3:46:49 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Catalog generated by hbm2java
 */
@Entity
@Table(name = "catalog", catalog = "onion")
public class Catalog implements java.io.Serializable {

	private Integer id;
	private InvItem invItem;
	private CatalogType catalogType;
	private String code;
	private String name;
	private BigDecimal finalPrice;
	private BigDecimal estPrice;
	private byte[] img;
	private Date updateDate;
	private String createUser;
	private Date createDate;
	private String updateUser;
	private Set<CatalogItem> catalogItems = new HashSet<CatalogItem>(0);
	private Set<SaleOrderItem> saleOrderItems = new HashSet<SaleOrderItem>(0);

	public Catalog() {
	}

	public Catalog(InvItem invItem, CatalogType catalogType) {
		this.invItem = invItem;
		this.catalogType = catalogType;
	}

	public Catalog(InvItem invItem, CatalogType catalogType, String code, String name, BigDecimal finalPrice, BigDecimal estPrice, byte[] img, Date updateDate, String createUser, Date createDate, String updateUser, Set<CatalogItem> catalogItems, Set<SaleOrderItem> saleOrderItems) {
		this.invItem = invItem;
		this.catalogType = catalogType;
		this.code = code;
		this.name = name;
		this.finalPrice = finalPrice;
		this.estPrice = estPrice;
		this.img = img;
		this.updateDate = updateDate;
		this.createUser = createUser;
		this.createDate = createDate;
		this.updateUser = updateUser;
		this.catalogItems = catalogItems;
		this.saleOrderItems = saleOrderItems;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "inv_item_id", nullable = false)
	public InvItem getInvItem() {
		return this.invItem;
	}

	public void setInvItem(InvItem invItem) {
		this.invItem = invItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "catalog_type_id", nullable = false)
	public CatalogType getCatalogType() {
		return this.catalogType;
	}

	public void setCatalogType(CatalogType catalogType) {
		this.catalogType = catalogType;
	}

	@Column(name = "code", length = 10)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "final_price", precision = 10)
	public BigDecimal getFinalPrice() {
		return this.finalPrice;
	}

	public void setFinalPrice(BigDecimal finalPrice) {
		this.finalPrice = finalPrice;
	}

	@Column(name = "est_price", precision = 10)
	public BigDecimal getEstPrice() {
		return this.estPrice;
	}

	public void setEstPrice(BigDecimal estPrice) {
		this.estPrice = estPrice;
	}

	@Column(name = "img")
	public byte[] getImg() {
		return this.img;
	}

	public void setImg(byte[] img) {
		this.img = img;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "create_user", length = 50)
	public String getCreateUser() {
		return this.createUser;
	}

	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "update_user", length = 50)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalog")
	public Set<CatalogItem> getCatalogItems() {
		return this.catalogItems;
	}

	public void setCatalogItems(Set<CatalogItem> catalogItems) {
		this.catalogItems = catalogItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalog")
	public Set<SaleOrderItem> getSaleOrderItems() {
		return this.saleOrderItems;
	}

	public void setSaleOrderItems(Set<SaleOrderItem> saleOrderItems) {
		this.saleOrderItems = saleOrderItems;
	}

}
